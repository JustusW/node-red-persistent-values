[
    {
        "id": "6680edf3f52a5ba5",
        "type": "persistent value",
        "z": "613529d99b084479",
        "name": "",
        "valuesConfig": "7b534a78d263796e",
        "valueSelect": "LightOn",
        "value": "LightOn",
        "command": "write",
        "msgProperty": "payload",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "x": 360,
        "y": 160,
        "wires": [
            [
                "41c998f03b6f3c81"
            ],
            []
        ]
    },
    {
        "id": "c3aa2b4d0a32ebdc",
        "type": "inject",
        "z": "613529d99b084479",
        "name": "Light: On",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "6680edf3f52a5ba5"
            ]
        ]
    },
    {
        "id": "9614baf3d84c053b",
        "type": "inject",
        "z": "613529d99b084479",
        "name": "Light: Off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "6680edf3f52a5ba5"
            ]
        ]
    },
    {
        "id": "ddb2c95fae17feef",
        "type": "persistent value",
        "z": "613529d99b084479",
        "name": "",
        "valuesConfig": "7b534a78d263796e",
        "valueSelect": "LightOn",
        "value": "LightOn",
        "command": "read",
        "msgProperty": "payload",
        "collectValues": true,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "2c51a7143fe34691"
            ],
            []
        ]
    },
    {
        "id": "2c51a7143fe34691",
        "type": "debug",
        "z": "613529d99b084479",
        "name": "Read Status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 300,
        "wires": []
    },
    {
        "id": "97876ab00fa2d73a",
        "type": "comment",
        "z": "613529d99b084479",
        "name": "Write persistent value",
        "info": "# Write persistent data\n\nUpdate the persistent value by writing any value matching the configured data type.\n\n- The value will be persistet in the NodeRED context with the configured name / scope.\n- The node status shows the last persistet value and infos about the datatype / scope.\n- The `msg.payload` will contain the last persistet value.",
        "x": 120,
        "y": 100,
        "wires": []
    },
    {
        "id": "41c998f03b6f3c81",
        "type": "debug",
        "z": "613529d99b084479",
        "name": "Write Status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "ef2d2459870a5e5d",
        "type": "comment",
        "z": "613529d99b084479",
        "name": "Read persistent value",
        "info": "# Read persistent data\n\nRead the current persistet value.\n\n- The node status shows the current value read from the NodeRED context\n  and infos about the datatype / scope.\n- The `msg.payload` will contain current value read from the NodeRED context.\n- In `msg.values` the current value will be added to a object with named attributes equal\n  to the persistent value configuration.",
        "x": 120,
        "y": 240,
        "wires": []
    },
    {
        "id": "b81bbc8a37e050dc",
        "type": "inject",
        "z": "613529d99b084479",
        "name": "Read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "ddb2c95fae17feef"
            ]
        ]
    },
    {
        "id": "f152cc1d43d5898b",
        "type": "comment",
        "z": "613529d99b084479",
        "name": "*Important*: Make config available",
        "info": "# Workaround for import of example configuration\n\nPersistent values relies on an interactive relation between the\nconfiguration and the concrete presistent values node.\n\nDue to limitations of NodeRED the configuration is not properly\nregister with the backend when importing an example flow.\n\nTherefore the following workaround shall be applied after the\ninitial example import:\n\n 1. Open the edit dialog of any of the presistent value nodes.\n 2. Open the edit dialog if the referenced configuration \"House Config\".\n 3. Press \"Update\".\n \nAfter these steps the drop-down menu of the \"Value\" should be populated with all\nthree configured persistent values. \nThe first drop-down value \"LightOn\" should be selected for the example.",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "7b534a78d263796e",
        "type": "persistent values config",
        "name": "House States",
        "values": [
            {
                "name": "LightOn",
                "datatype": "bool",
                "default": false,
                "scope": "global",
                "storage": "default"
            },
            {
                "name": "OpenWindows",
                "datatype": "num",
                "default": 0,
                "scope": "global",
                "storage": "default"
            },
            {
                "name": "NextGarbageCollection",
                "datatype": "str",
                "default": "Monday, 2023-01-08",
                "scope": "global",
                "storage": "default"
            }
        ]
    }
]